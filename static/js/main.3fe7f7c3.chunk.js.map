{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","message","Navbar","changeTheme","selTheme","selMode","console","log","document","body","style","backgroundColor","setMode","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","placeholder","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","color","heading","rows","value","onChange","event","target","newText","showAlert","getElementById","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","App","_useState3","_useState4","setAlert","setTimeout","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","react_router_dom","src_App"],"mappings":"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","file":"static/js/main.3fe7f7c3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{capitalize(props.alert.type)}:</strong>\r\n        {\"     \"}\r\n        {props.alert.message}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","import \"./navbar.css\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./ColorPallet.css\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  const changeTheme = (selTheme, selMode) => {\r\n    console.log(selTheme);\r\n    document.body.style.backgroundColor = selTheme;\r\n    props.setMode(selMode);\r\n  };\r\n  return (\r\n    <div>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          {/* <Link className=\"navbar-brand\" to=\"/\">\r\n            {props.title}\r\n          </Link> */}\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                  Home\r\n                </Link> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">\r\n                  {props.aboutText}\r\n                </Link>\r\n              </li> */}\r\n            </ul>\r\n            <form className=\"d-flex\" role=\"search\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form>\r\n            <div\r\n              className={`form-check form-switch mx-2 my-2 text-${\r\n                props.mode === \"light\" ? \"dark\" : \"light\"\r\n              }`}\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick={props.toggleMode}\r\n              />\r\n              <label\r\n                className=\"form-check-label\"\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                Dark Mode\r\n              </label>\r\n            </div>\r\n            <div\r\n              className=\"red mx-1 my-1\"\r\n              onClick={() => changeTheme(\"red\", \"danger\")}\r\n            ></div>\r\n            <div\r\n              className=\"blue mx-1 my-1\"\r\n              onClick={() => changeTheme(\"blue\", \"primary\")}\r\n            ></div>\r\n            <div\r\n              className=\"green mx-1 my-1\"\r\n              onClick={() => changeTheme(\"green\", \"success\")}\r\n            ></div>\r\n            <div\r\n              className=\"grey mx-1 my-1\"\r\n              onClick={() => changeTheme(\"grey\", \"secondary\")}\r\n            ></div>\r\n            <div\r\n              className=\"yellow mx-1 my-1\"\r\n              onClick={() => changeTheme(\"yellow\", \"warning\")}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutTitle: PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"set title here\",\r\n  aboutText: \"set text here\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n  const handleUpClick = () => {\r\n    // console.log(\"upper button clicked\");\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Your texts has been converted to Upper Case.\", \"success\");\r\n  };\r\n  const handleLoClick = () => {\r\n    // console.log(\"upper button clicked\");\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Your texts has been converted to Lower Case.\", \"success\");\r\n  };\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"upper button clicked\");\r\n    setText(event.target.value);\r\n  };\r\n  const handleCopy = () => {\r\n    let text = document.getElementById(\"myBox\");\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Your text has been copied to your clipboard.\", \"success\");\r\n  };\r\n  const handleSpace = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\r\n      \"Extra spaces have been removed from your text.\",\r\n      \"success\"\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"myBox\" className=\"form-label\">\r\n            {props.heading}\r\n          </label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n              backgroundColor: props.mode === \"dark\" ? \"#042743\" : \"white\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>\r\n          Convert to UpperCase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>\r\n          Convert to LowerCase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>\r\n          Copy Text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1 my-3\" onClick={handleSpace}>\r\n          Remove Extra Spaces\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h1>Your Text Summary:</h1>\r\n        <p>\r\n          {text === \"\" ? 0 : text.split(\" \").length} words {text.length}{\" \"}\r\n          characters\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Alert from \"./components/Alert\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport TextForm from \"./components/TextForm\";\r\n// import { Routes, Route, Link } from \"react-router-dom\";\r\n// import About from \"./components/About\";\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState(\"light\");\r\n\r\n  const toggleMode = () => {\r\n    if (mode === \"light\") {\r\n      setMode(\"dark\");\r\n      document.body.style.backgroundColor = \"#042743\";\r\n      showAlert(\"Dark Mode has been enabled\", \"success\");\r\n    } else {\r\n      setMode(\"light\");\r\n      document.body.style.backgroundColor = \"white\";\r\n      showAlert(\"Light Mode has been enabled\", \"success\");\r\n    }\r\n  };\r\n\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const showAlert = (message, type) => {\r\n    setAlert({\r\n      message: message,\r\n      type: type,\r\n    });\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar\r\n        title=\"TextUtils2\"\r\n        aboutText=\"About TextUtils\"\r\n        mode={mode}\r\n        toggleMode={toggleMode}\r\n        setMode={setMode}\r\n      ></Navbar>\r\n      <Alert alert={alert}></Alert>\r\n      <div className=\"container\">\r\n        {/* <Routes>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            element={\r\n              <TextForm\r\n                heading=\"Enter Your Text Here:\"\r\n                mode={mode}\r\n                showAlert={showAlert}\r\n              ></TextForm>\r\n            }\r\n          />\r\n          <Route exact path=\"about\" element={<About></About>} />\r\n        </Routes> */}\r\n        <TextForm\r\n          heading=\"Enter Your Text Here:\"\r\n          mode={mode}\r\n          showAlert={showAlert}\r\n        ></TextForm>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}